x-airflow-environment: &airflow-environment
  environment:
    - AIRFLOW_INTERNAL_USER
    - AIRFLOW_INTERNAL_PASSWORD
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${AIRFLOW_POSTGRES_USER}:${AIRFLOW_POSTGRES_PASSWORD}@${AIRFLOW_POSTGRES_HOST}:${AIRFLOW_POSTGRES_PORT}/${AIRFLOW_POSTGRES_DB}
    - DBT_POSTGRES_USER
    - DBT_POSTGRES_PASSWORD
    - DBT_POSTGRES_DB
    - DBT_POSTGRES_HOST
    - DBT_POSTGRES_PORT
  image: feluelle/fdb_airflow:latest
x-airflow-volumes: &airflow-volumes
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./storage:/opt/storage
    - ./dbt:/opt/dbt

version: '3.8'
services:
  fdb-dbt-db:
    image: library/postgres:latest
    container_name: ${DBT_POSTGRES_HOST}
    environment:
      - POSTGRES_USER=${DBT_POSTGRES_USER}
      - POSTGRES_PASSWORD=${DBT_POSTGRES_PASSWORD}
      - POSTGRES_DB=${DBT_POSTGRES_DB}
    ports:
      - 55432:${DBT_POSTGRES_PORT}
  fdb-airflow-db:
    image: library/postgres:latest
    container_name: ${AIRFLOW_POSTGRES_HOST}
    environment:
      - POSTGRES_USER=${AIRFLOW_POSTGRES_USER}
      - POSTGRES_PASSWORD=${AIRFLOW_POSTGRES_PASSWORD}
      - POSTGRES_DB=${AIRFLOW_POSTGRES_DB}
    ports:
      - 55433:${AIRFLOW_POSTGRES_PORT}
    restart: always
  fdb-airflow-db-init:
    <<: *airflow-environment
    build: .
    container_name: fdb_airflow_db_init
    command: db upgrade
    depends_on:
      - fdb-airflow-db
  fdb-airflow-users-init:
    <<: *airflow-environment
    container_name: fdb_airflow_users_init
    command: users create --role Admin --username ${AIRFLOW_USER} --email airflow@apache.org --firstname Airflow --lastname Apache --password ${AIRFLOW_PASSWORD}
    depends_on:
      - fdb-airflow-db-init
  fdb-airflow-webserver:
    <<: *airflow-environment
    container_name: fdb_airflow_webserver
    command: webserver
    ports:
      - 58080:8080
    <<: *airflow-volumes
    depends_on:
      - fdb-airflow-db-init
    restart: always
  fdb-airflow-scheduler:
    <<: *airflow-environment
    container_name: fdb_airflow_scheduler
    command: scheduler
    <<: *airflow-volumes
    depends_on:
      - fdb-airflow-db-init
    restart: always